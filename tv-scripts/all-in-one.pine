//@version=4

study(title="AllInOne", overlay=true)

length = input(21, minval=1, title="Length")
src = input(close, title="Source")
breakhigh_source = input(high, title="High Break Source")
breaklow_source = input(low, title="Low Break Source")
bb_use_ema = input(false, title="Use EMA Basis?")
blend_color = #E8E8E8

BB_Basis = bb_use_ema ? ema(src, length) : sma(src, length)

//2SD BB
B2mult = input(2.0, minval=0.001, maxval=50, title="Band 1 StDev")
B2dev = B2mult * stdev(src, length)
B2upper = BB_Basis + B2dev
B2lower = BB_Basis - B2dev

//3SD BB
B3mult = input(3.0, minval=0.001, maxval=50, title="Band 2 StDev")
B3dev = B3mult * stdev(src, length)
B3upper = BB_Basis + B3dev
B3lower = BB_Basis - B3dev

p_bb2_upper = plot(B2upper, color=blend_color, style=plot.style_line, linewidth=0, title="Band 2SD upper")
p_bb2_lower = plot(B2lower, color=blend_color, style=plot.style_line, linewidth=0, title="Band 2SD lower")
p_bb3_upper = plot(B3upper, color=blend_color, style=plot.style_line, linewidth=0, title="Band 3SD upper")
p_bb3_lower = plot(B3lower, color=blend_color, style=plot.style_line, linewidth=0, title="Band 3SD lower") 

fill(p_bb2_upper, p_bb3_upper, color=color.red)
fill(p_bb2_lower, p_bb3_lower, color=color.green)

// Keltner Channel
useTrueRange = input(true)

Kmult = input(1.5, title="Keltner Range")
Kma = bb_use_ema ? ema(src, length) : sma(src, length)
Krange = useTrueRange ? tr : high - low
Krangema = bb_use_ema ? ema(Krange, length) : sma(Krange, length)
Kupper = Kma + Krangema * Kmult
Klower = Kma - Krangema * Kmult

p5 = plot(Kupper, color=blend_color, linewidth=1, title="Keltner upper")
p6 = plot(Klower, color=blend_color, linewidth=1, title="Keltner lower")
fill(p5, p6, color=color.black)

// plot breakouts
plotshape(breakhigh_source >= B3upper, title="High Breakout", style=shape.triangledown, location=location.abovebar, size=size.tiny, color=color.new(color.red, transp=0))
plotshape(breaklow_source <= B3lower, title="Low Breakout", style=shape.triangleup, location=location.belowbar, size=size.tiny, color=color.new(color.green, transp=0))

// Higher Res EMA
higher_res = input(title="High Res EMA TF", type=input.resolution, defval="D")
ema_8_high_res = security(syminfo.tickerid, higher_res, ema(src, 8), barmerge.gaps_on, barmerge.lookahead_off)
ema_21_high_res = security(syminfo.tickerid, higher_res, ema(src, 21), barmerge.gaps_on, barmerge.lookahead_off)

ema_8_plt = plot(ema_8_high_res, color=ema_8_high_res > ema_21_high_res ? color.lime : color.maroon, style=plot.style_line, linewidth=0, title="EMA 8 (HTF)")
ema_21_plt = plot(ema_21_high_res, color=ema_8_high_res > ema_21_high_res ? color.lime : color.maroon, style=plot.style_line, linewidth=2, title="EMA 21 (HTF)")
fill(ema_8_plt, ema_21_plt, color=ema_8_high_res > ema_21_high_res ? color.new(color=color.lime, transp=70) : color.new(color=color.maroon, transp=70))

// Strat

plotchar(10e10, "", "")

f_print(_txt) =>
    t = time + (time - time[1]) * 5
    var _lbl = label.new(t, high, _txt, xloc.bar_time, yloc.price, #00000000, label.style_none, color.gray, size.large)
    label.set_xy(_lbl, t, high + 1 * tr)
    label.set_text(_lbl, _txt)
    label.set_textalign(_lbl,text.align_left)

stringBuilder(timeframe,lastClose,lastHigh,lastLow,thisClose,thisHigh,thisLow)=>
    outputString = timeframe+":"
    if thisClose>lastClose
        outputString := outputString+" ⬆"
    else
        outputString := outputString+" ⬇"
    if lastHigh>thisHigh and lastLow<thisLow
        outputString := outputString+"-Inside"
    if lastHigh<thisHigh and lastLow>thisLow
        outputString := outputString+"-Outside"
    outputString

simpStringBuilder(timeframe,lastClose)=>
    outputString = timeframe+":"
    if lastClose<close
        outputString := outputString+" ⬆"
    else
        outputString := outputString+" ⬇"
    outputString

lastMonthClose=security(syminfo.tickerid,"M",close[1], lookahead=barmerge.lookahead_on)
lastMonthHigh =security(syminfo.tickerid,"M",high[1], lookahead=barmerge.lookahead_on)
lastMonthLow = security(syminfo.tickerid,"M",low[1], lookahead=barmerge.lookahead_on)
thisMonthClose=security(syminfo.tickerid,"M",close, lookahead=barmerge.lookahead_on)
thisMonthHigh =security(syminfo.tickerid,"M",high, lookahead=barmerge.lookahead_on)
thisMonthLow = security(syminfo.tickerid,"M",low, lookahead=barmerge.lookahead_on)
lastWeekClose=security(syminfo.tickerid,"W",close[1], lookahead=barmerge.lookahead_on)
lastWeekHigh =security(syminfo.tickerid,"W",high[1], lookahead=barmerge.lookahead_on)
lastWeekLow = security(syminfo.tickerid,"W",low[1], lookahead=barmerge.lookahead_on)
thisWeekClose=security(syminfo.tickerid,"W",close, lookahead=barmerge.lookahead_on)
thisWeekHigh =security(syminfo.tickerid,"W",high, lookahead=barmerge.lookahead_on)
thisWeekLow = security(syminfo.tickerid,"W",low, lookahead=barmerge.lookahead_on)
lastDayClose=security(syminfo.tickerid,"D",close[1], lookahead=barmerge.lookahead_on)
lastDayHigh =security(syminfo.tickerid,"D",high[1], lookahead=barmerge.lookahead_on)
lastDayLow = security(syminfo.tickerid,"D",low[1], lookahead=barmerge.lookahead_on)
thisDayClose=security(syminfo.tickerid,"D",close, lookahead=barmerge.lookahead_on)
thisDayHigh =security(syminfo.tickerid,"D",high, lookahead=barmerge.lookahead_on)
thisDayLow = security(syminfo.tickerid,"D",low, lookahead=barmerge.lookahead_on)
lastHourClose=security(syminfo.tickerid,"60",close[1], lookahead=barmerge.lookahead_on)
lastHourHigh =security(syminfo.tickerid,"60",high[1], lookahead=barmerge.lookahead_on)
lastHourLow = security(syminfo.tickerid,"60",low[1], lookahead=barmerge.lookahead_on)
thisHourClose=security(syminfo.tickerid,"60",close, lookahead=barmerge.lookahead_on)
thisHourHigh =security(syminfo.tickerid,"60",high, lookahead=barmerge.lookahead_on)
thisHourLow = security(syminfo.tickerid,"60",low, lookahead=barmerge.lookahead_on)

stringToPrint =""
Month = stringBuilder("M",lastMonthClose,lastMonthHigh,lastMonthLow,thisMonthClose,thisMonthHigh,thisMonthLow)
Week = stringBuilder("W",lastWeekClose,lastWeekHigh,lastWeekLow,thisWeekClose,thisWeekHigh,thisWeekLow)
Day = stringBuilder("D",lastDayClose,lastDayHigh,lastDayLow,thisDayClose,thisDayHigh,thisDayLow)
Hour = stringBuilder("H",lastHourClose,lastHourHigh,lastHourLow,thisHourClose,thisHourHigh,thisHourLow)
stringToPrint :=Month+"\n"+Week+"\n"+Day+"\n"+Hour
f_print(stringToPrint)
